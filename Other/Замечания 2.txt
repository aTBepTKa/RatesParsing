public delegate string GetSubString(string text);
В моделях не должно быть ничего кроме свойств.
Погугли DTO и POCO.
 
Вместо "\n" используй Environment.NewLine
 
Общепризнанным мировым стандартом кодировки текстовых файлов является UTF8. Укажи её явно при инициализации StreamWriter. По умолчанию выберется та что сейчас у операционной системы.
Ну и путь к файлу/папке надо проверять на существование. И например если не существует - создать / выбросить ошибку.
 
Не должно быть классов и методов без модификатора доступа. 
 
При работе с потоками (файлы, сеть, БД), в общем везде где есть задержки не из-за вычислений, рекомендуется делать асинхронные вызовы, поскольку они не блокируют поток во время ожидания ответа. Примени паттерн async/await для методов WriteToFile, GetHtmlDocumentFromWeb. 

Если у тебя заранее известен размер коллекции, то укажи его при её создании. Например
var currencyDataList = new List<CurrencyDataModel>(request.RowsNum - request.StartRow);
Выделить память 1 раз дешевле чем N раз.
 
var formatInfo = new NumberFormatInfo() { ... };
Круглые скобки можно убрать, это рудимент в языке.
 
Методы GetValueByXPath и GetClearText можно сделать static. Так ссылка на них создастся 1 раз при JIT компиляции, а не будет создаваться каждый раз при инициализации класса. + сборщику мусора будет меньше работы.
 
decimal.Parse()
int.Parse()
Лучше использовать методы TryParse()
Они не выбросят исключение, а вернут true либо false. И в случае false ты можешь вернуть понятную человеку ошибку. В твоем случае из исключения не будет понятно парсинг какого именно параметра (exchangeRate или unit) завершился ошибкой.
 
catch (ArgumentNullException)
{
throw new Exception("Отсутствует XPath адрес");
}
Так не правильно делать. Базовые исключения для того и созданы, чтобы из их типа было понятно в чем проблема. Выбрасывай обычный Exception только когда не подходит ни одно другое стандартное исключение.
https://vk.com/away.php?to=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fdotnet%2Fstandard%2Fdesign-guidelines%2Fusing-standard-exception-types&cc_key=